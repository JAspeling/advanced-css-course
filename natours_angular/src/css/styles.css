/* You can add global styles to this file, and also import other style files */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(1rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    transform: translate(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* Forces all the elements to inherit the box-sizing property */
  box-sizing: inherit; }

html {
  /* Defines what 1rem is:
    16 px = 10 / 16px = 0.625 
  */
  font-size: 62.5%; }

body {
  padding: 3rem;
  box-sizing: border-box; }

::-webkit-scrollbar {
  width: 0.8rem;
  height: 0.8rem; }

::-webkit-scrollbar-thumb {
  transition: all 0.3s;
  background: #28b485;
  border-radius: 5px; }
  ::-webkit-scrollbar-thumb:hover {
    background-color: #1f8a66; }

::-webkit-scrollbar-track {
  position: absolute;
  top: -10px;
  background: #94dac2; }

::-webkit-scrollbar-button {
  background-color: #1f8a66; }
  ::-webkit-scrollbar-button:hover {
    background-color: #114c38; }
  ::-webkit-scrollbar-button:vertical {
    height: 1rem; }
    ::-webkit-scrollbar-button:vertical:decrement {
      border-radius: 0 0 0.3rem 0.3rem; }
    ::-webkit-scrollbar-button:vertical:increment {
      border-radius: 0.3rem 0.3rem 0 0; }
  ::-webkit-scrollbar-button:horizontal {
    width: 1rem; }
    ::-webkit-scrollbar-button:horizontal:decrement {
      border-radius: 0 0.3rem 0.3rem 0; }
    ::-webkit-scrollbar-button:horizontal:increment {
      border-radius: 0.3rem 0 0 0.3rem; }

.panel-body {
  scrollbar-face-color: #28b485;
  scrollbar-track-color: #94dac2; }

body {
  font-family: "Lato", "sans-serif";
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777; }

.header-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 6rem; }
  .header-primary--main {
    /* block occupies the entire available width, and create line breaks before and after the element. */
    /* Note: Span defaults to inline-block. 
        - inline-block is used to render items next o each other instead of underneath each other.
    */
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    backface-visibility: hidden; }
  .header-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #62df8a, #28b485);
  -webkit-background-clip: text;
  background-clip: text;
  clip: text;
  color: transparent;
  letter-spacing: .2rem;
  transition: all 0.2s; }
  .heading-secondary:hover {
    transform: skewX(-5deg) scale(1.01);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center !important; }

.u-margin-bottom-big {
  margin-bottom: 8rem !important; }

.u-margin-bottom-medium {
  margin-bottom: 4rem !important; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important; }

.u-margin-top-huge {
  margin-top: 10rem !important; }

.u-margin-top-big {
  margin-top: 8rem !important; }

.u-margin-top-medium {
  margin-top: 4rem !important; }

.u-margin-top-small {
  margin-top: 1.5rem !important; }

.btn {
  /*
    Used for the animation when hovering over the button, creates a 'shadow' button that will be 
    modified, and rendered behind the actual button. Applies to all elements of the .btn class.
  */ }
  .btn, .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative;
    border: none;
    cursor: pointer; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scale(1.5);
      opacity: 0; }
  .btn:active, .btn:focus {
    outline: none;
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.2); }
  .btn::after {
    /* ::before and ::after psuedo elements should always define some content for it to be used */
    content: "";
    /* not really needed as we are using absolute positioning with fixed top and left attributes, relative to the button container.  */
    display: inline-block;
    width: 100%;
    height: 100%;
    border-radius: 10rem;
    /* Absoulte positoning to position the element 100% relative to the actual button, rendered behind it. */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--green {
    background-color: #7ed56f;
    color: #fff; }
    .btn--green::after {
      background-color: #7ed56f; }
  .btn--animation {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /* apply the 0% of the animation before the animation starts. */
    animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #7ed56f;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #7ed56f;
  padding: 0.3rem 1rem 0.3rem 1rem; }

.btn-text:hover {
  background-color: #28b485;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  transform: translateY(-0.3rem);
  transition: all 0.3s; }

.btn-text:active {
  box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.2);
  transform: translateY(-0.1rem); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 0.3rem;
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 1rem; }
    .composition__photo:hover {
      outline: 1.1rem solid #7ed56f;
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20;
      transform: scale(1.05) translateY(-0.5rem); }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  transform: translateZ(0);
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 0.3rem;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform 0.3s; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }
  .feature-box__icon {
    font-size: 6rem;
    display: inline-block;
    background: linear-gradient(to right, #62df8a, #28b485);
    -webkit-background-clip: text;
    background-clip: text;
    clip: text;
    color: transparent; }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 50rem; }
  .card:hover .card__side--front {
    transform: rotateY(180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0deg); }
  .card__side {
    position: absolute;
    height: 50rem;
    transition: all 0.8s ease;
    width: 100%;
    backface-visibility: hidden;
    border-radius: 0.3rem;
    overflow: hidden;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .card__side--front {
      background-color: #fff;
      top: 0;
      left: 0; }
    .card__side--back {
      transform: rotateY(-180deg);
      top: 0;
      left: 0; }
      .card__side--back-1 {
        background-image: linear-gradient(to bottom right, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to bottom right, #62df8a, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to bottom right, #2998ff, #5643fa); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: screen;
    overflow: hidden;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%); }
    .card__picture--1 {
      background-image: linear-gradient(to bottom right, #ffb900, #ff7730), url("../img/nat-5.jpg"); }
    .card__picture--2 {
      background-image: linear-gradient(to bottom right, #62df8a, #28b485), url("../img/nat-6.jpg"); }
    .card__picture--3 {
      background-image: linear-gradient(to bottom right, #2998ff, #5643fa), url("../img/nat-7.jpg"); }
  .card__heading {
    position: absolute;
    font-size: 2.8rem;
    font-weight: 300;
    text-align: right;
    text-transform: uppercase;
    color: #fff;
    top: 12rem;
    right: 2rem;
    width: 75%;
    z-index: 1; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone; }
    .card__heading-span--1 {
      background: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background: linear-gradient(to right bottom, rgba(98, 223, 138, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: rem; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price-box {
    text-align: center;
    color: #fff;
    margin-bottom: 8rem; }
  .card__price-1 {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-2 {
    font-size: 6rem;
    font-weight: 100; }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 0.3rem;
  padding: 6rem;
  font-size: 1.6rem;
  padding-left: 9rem;
  transform: skewX(-12deg); }
  .story__shape {
    position: relative;
    width: 15rem;
    height: 15rem;
    float: left;
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(50% at 50% 50%);
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    transform: translateX(-3rem) skew(12deg); }
  .story__image {
    height: 100%;
    transform: scale(1.2);
    backface-visibility: hidden;
    transition: all .3s; }
  .story__text {
    transform: skew(12deg);
    backface-visibility: hidden; }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    opacity: 0;
    color: #fff;
    font-size: 1.7rem;
    text-align: center;
    transition: all .3s;
    backface-visibility: hidden; }
  .story:hover .story__caption {
    opacity: 1;
    transform: translate(-50%, -50%); }
  .story:hover .story__image {
    transform: scale(1);
    filter: blur(3px) brightness(80%);
    backface-visibility: hidden; }

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: .15;
  overflow: hidden;
  transform: skewY(-6.5deg); }
  .bg-video__content {
    width: 100%;
    height: 100%;
    object-fit: cover; }

.form__group:not(:last-child) {
  margin-bottom: 2rem; }

.form__input {
  font-size: 1.5rem;
  font-family: inherit;
  color: inherit;
  padding: 1.5rem 2rem;
  border-radius: 0.3rem;
  background-color: rgba(255, 255, 255, 0.5);
  border: none;
  border-bottom: .3rem solid transparent;
  width: 90%;
  display: block;
  transition: all .3s; }
  .form__input:focus {
    outline: none;
    box-shadow: 0 1.5rem 2rem rgba(0, 0, 0, 0.1);
    border-bottom: 0.3rem solid #7ed56f; }
  .form__input::-webkit-input-placeholder {
    color: #999; }
  .form__input:focus:invalid {
    border-bottom: 0.3rem solid #ff7730; }
  .form__input:focus:valid {
    border-bottom: 0.3rem solid #7ed56f; }

.form__input:placeholder-shown + .form__label {
  opacity: 0;
  visibility: hidden;
  transform: translateY(-4rem); }

.form__label {
  font-size: 1.2rem;
  font-weight: 700;
  margin-left: 2rem;
  margin-top: 0.7rem;
  display: block;
  transition: all .3s; }

.form__radio-group {
  width: 49%;
  display: inline-block; }

.form__radio-input {
  display: none; }

.form__radio-label {
  font-size: 1.6rem;
  cursor: pointer;
  position: relative;
  padding-left: 3.5rem; }

.form__radio-button {
  height: 3rem;
  width: 3rem;
  border: 0.2rem solid #7ed56f;
  border-radius: 50%;
  display: inline-block;
  position: absolute;
  left: 0;
  top: -.4rem;
  transition: all .3s; }
  .form__radio-button::after {
    content: "";
    display: block;
    height: 1.3rem;
    width: 1.3rem;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #7ed56f;
    opacity: 0;
    transition: all .2s; }

.form__radio-input:checked + .form__radio-label .form__radio-button::after {
  opacity: 1; }

.form__radio-input:not(:checked):hover + .form__radio-label .form__radio-button::after {
  background-color: rgba(98, 223, 138, 0.5);
  opacity: 1; }

.row {
  max-width: 114rem;
  margin: 0 auto;
  /* This is a selector. Can be used for multiple scenarios, for instance 
    Links, selcting all the links that open in a new tab, can be styled 
    differently than those that open on the current window.
  */ }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    clear: both;
    display: table; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-1 {
    width: calc( 1/1 * (100% - ((1 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-1-of-2 {
    width: calc( 1/2 * (100% - ((2 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-1-of-3 {
    width: calc( 1/3 * (100% - ((3 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-1-of-4 {
    width: calc( 1/4 * (100% - ((4 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-1-of-5 {
    width: calc( 1/5 * (100% - ((5 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-1-of-6 {
    width: calc( 1/6 * (100% - ((6 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-1-of-7 {
    width: calc( 1/7 * (100% - ((7 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-1-of-8 {
    width: calc( 1/8 * (100% - ((8 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-1-of-9 {
    width: calc( 1/9 * (100% - ((9 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-1-of-10 {
    width: calc( 1/10 * (100% - ((10 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-1-of-11 {
    width: calc( 1/11 * (100% - ((11 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-1-of-12 {
    width: calc( 1/12 * (100% - ((12 - 1) * 6rem)) + ((0) * 6rem )); }
  .row .col-2-of-1 {
    width: calc( 2/1 * (100% - ((1 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-2-of-2 {
    width: calc( 2/2 * (100% - ((2 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-2-of-3 {
    width: calc( 2/3 * (100% - ((3 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-2-of-4 {
    width: calc( 2/4 * (100% - ((4 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-2-of-5 {
    width: calc( 2/5 * (100% - ((5 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-2-of-6 {
    width: calc( 2/6 * (100% - ((6 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-2-of-7 {
    width: calc( 2/7 * (100% - ((7 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-2-of-8 {
    width: calc( 2/8 * (100% - ((8 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-2-of-9 {
    width: calc( 2/9 * (100% - ((9 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-2-of-10 {
    width: calc( 2/10 * (100% - ((10 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-2-of-11 {
    width: calc( 2/11 * (100% - ((11 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-2-of-12 {
    width: calc( 2/12 * (100% - ((12 - 1) * 6rem)) + ((1) * 6rem )); }
  .row .col-3-of-1 {
    width: calc( 3/1 * (100% - ((1 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-3-of-2 {
    width: calc( 3/2 * (100% - ((2 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-3-of-3 {
    width: calc( 3/3 * (100% - ((3 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-3-of-4 {
    width: calc( 3/4 * (100% - ((4 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-3-of-5 {
    width: calc( 3/5 * (100% - ((5 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-3-of-6 {
    width: calc( 3/6 * (100% - ((6 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-3-of-7 {
    width: calc( 3/7 * (100% - ((7 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-3-of-8 {
    width: calc( 3/8 * (100% - ((8 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-3-of-9 {
    width: calc( 3/9 * (100% - ((9 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-3-of-10 {
    width: calc( 3/10 * (100% - ((10 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-3-of-11 {
    width: calc( 3/11 * (100% - ((11 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-3-of-12 {
    width: calc( 3/12 * (100% - ((12 - 1) * 6rem)) + ((2) * 6rem )); }
  .row .col-4-of-1 {
    width: calc( 4/1 * (100% - ((1 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-4-of-2 {
    width: calc( 4/2 * (100% - ((2 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-4-of-3 {
    width: calc( 4/3 * (100% - ((3 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-4-of-4 {
    width: calc( 4/4 * (100% - ((4 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-4-of-5 {
    width: calc( 4/5 * (100% - ((5 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-4-of-6 {
    width: calc( 4/6 * (100% - ((6 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-4-of-7 {
    width: calc( 4/7 * (100% - ((7 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-4-of-8 {
    width: calc( 4/8 * (100% - ((8 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-4-of-9 {
    width: calc( 4/9 * (100% - ((9 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-4-of-10 {
    width: calc( 4/10 * (100% - ((10 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-4-of-11 {
    width: calc( 4/11 * (100% - ((11 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-4-of-12 {
    width: calc( 4/12 * (100% - ((12 - 1) * 6rem)) + ((3) * 6rem )); }
  .row .col-5-of-1 {
    width: calc( 5/1 * (100% - ((1 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-5-of-2 {
    width: calc( 5/2 * (100% - ((2 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-5-of-3 {
    width: calc( 5/3 * (100% - ((3 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-5-of-4 {
    width: calc( 5/4 * (100% - ((4 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-5-of-5 {
    width: calc( 5/5 * (100% - ((5 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-5-of-6 {
    width: calc( 5/6 * (100% - ((6 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-5-of-7 {
    width: calc( 5/7 * (100% - ((7 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-5-of-8 {
    width: calc( 5/8 * (100% - ((8 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-5-of-9 {
    width: calc( 5/9 * (100% - ((9 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-5-of-10 {
    width: calc( 5/10 * (100% - ((10 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-5-of-11 {
    width: calc( 5/11 * (100% - ((11 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-5-of-12 {
    width: calc( 5/12 * (100% - ((12 - 1) * 6rem)) + ((4) * 6rem )); }
  .row .col-6-of-1 {
    width: calc( 6/1 * (100% - ((1 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-6-of-2 {
    width: calc( 6/2 * (100% - ((2 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-6-of-3 {
    width: calc( 6/3 * (100% - ((3 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-6-of-4 {
    width: calc( 6/4 * (100% - ((4 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-6-of-5 {
    width: calc( 6/5 * (100% - ((5 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-6-of-6 {
    width: calc( 6/6 * (100% - ((6 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-6-of-7 {
    width: calc( 6/7 * (100% - ((7 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-6-of-8 {
    width: calc( 6/8 * (100% - ((8 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-6-of-9 {
    width: calc( 6/9 * (100% - ((9 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-6-of-10 {
    width: calc( 6/10 * (100% - ((10 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-6-of-11 {
    width: calc( 6/11 * (100% - ((11 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-6-of-12 {
    width: calc( 6/12 * (100% - ((12 - 1) * 6rem)) + ((5) * 6rem )); }
  .row .col-7-of-1 {
    width: calc( 7/1 * (100% - ((1 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-7-of-2 {
    width: calc( 7/2 * (100% - ((2 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-7-of-3 {
    width: calc( 7/3 * (100% - ((3 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-7-of-4 {
    width: calc( 7/4 * (100% - ((4 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-7-of-5 {
    width: calc( 7/5 * (100% - ((5 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-7-of-6 {
    width: calc( 7/6 * (100% - ((6 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-7-of-7 {
    width: calc( 7/7 * (100% - ((7 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-7-of-8 {
    width: calc( 7/8 * (100% - ((8 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-7-of-9 {
    width: calc( 7/9 * (100% - ((9 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-7-of-10 {
    width: calc( 7/10 * (100% - ((10 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-7-of-11 {
    width: calc( 7/11 * (100% - ((11 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-7-of-12 {
    width: calc( 7/12 * (100% - ((12 - 1) * 6rem)) + ((6) * 6rem )); }
  .row .col-8-of-1 {
    width: calc( 8/1 * (100% - ((1 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-8-of-2 {
    width: calc( 8/2 * (100% - ((2 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-8-of-3 {
    width: calc( 8/3 * (100% - ((3 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-8-of-4 {
    width: calc( 8/4 * (100% - ((4 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-8-of-5 {
    width: calc( 8/5 * (100% - ((5 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-8-of-6 {
    width: calc( 8/6 * (100% - ((6 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-8-of-7 {
    width: calc( 8/7 * (100% - ((7 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-8-of-8 {
    width: calc( 8/8 * (100% - ((8 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-8-of-9 {
    width: calc( 8/9 * (100% - ((9 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-8-of-10 {
    width: calc( 8/10 * (100% - ((10 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-8-of-11 {
    width: calc( 8/11 * (100% - ((11 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-8-of-12 {
    width: calc( 8/12 * (100% - ((12 - 1) * 6rem)) + ((7) * 6rem )); }
  .row .col-9-of-1 {
    width: calc( 9/1 * (100% - ((1 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-9-of-2 {
    width: calc( 9/2 * (100% - ((2 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-9-of-3 {
    width: calc( 9/3 * (100% - ((3 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-9-of-4 {
    width: calc( 9/4 * (100% - ((4 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-9-of-5 {
    width: calc( 9/5 * (100% - ((5 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-9-of-6 {
    width: calc( 9/6 * (100% - ((6 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-9-of-7 {
    width: calc( 9/7 * (100% - ((7 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-9-of-8 {
    width: calc( 9/8 * (100% - ((8 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-9-of-9 {
    width: calc( 9/9 * (100% - ((9 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-9-of-10 {
    width: calc( 9/10 * (100% - ((10 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-9-of-11 {
    width: calc( 9/11 * (100% - ((11 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-9-of-12 {
    width: calc( 9/12 * (100% - ((12 - 1) * 6rem)) + ((8) * 6rem )); }
  .row .col-10-of-1 {
    width: calc( 10/1 * (100% - ((1 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-10-of-2 {
    width: calc( 10/2 * (100% - ((2 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-10-of-3 {
    width: calc( 10/3 * (100% - ((3 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-10-of-4 {
    width: calc( 10/4 * (100% - ((4 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-10-of-5 {
    width: calc( 10/5 * (100% - ((5 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-10-of-6 {
    width: calc( 10/6 * (100% - ((6 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-10-of-7 {
    width: calc( 10/7 * (100% - ((7 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-10-of-8 {
    width: calc( 10/8 * (100% - ((8 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-10-of-9 {
    width: calc( 10/9 * (100% - ((9 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-10-of-10 {
    width: calc( 10/10 * (100% - ((10 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-10-of-11 {
    width: calc( 10/11 * (100% - ((11 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-10-of-12 {
    width: calc( 10/12 * (100% - ((12 - 1) * 6rem)) + ((9) * 6rem )); }
  .row .col-11-of-1 {
    width: calc( 11/1 * (100% - ((1 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-11-of-2 {
    width: calc( 11/2 * (100% - ((2 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-11-of-3 {
    width: calc( 11/3 * (100% - ((3 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-11-of-4 {
    width: calc( 11/4 * (100% - ((4 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-11-of-5 {
    width: calc( 11/5 * (100% - ((5 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-11-of-6 {
    width: calc( 11/6 * (100% - ((6 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-11-of-7 {
    width: calc( 11/7 * (100% - ((7 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-11-of-8 {
    width: calc( 11/8 * (100% - ((8 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-11-of-9 {
    width: calc( 11/9 * (100% - ((9 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-11-of-10 {
    width: calc( 11/10 * (100% - ((10 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-11-of-11 {
    width: calc( 11/11 * (100% - ((11 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-11-of-12 {
    width: calc( 11/12 * (100% - ((12 - 1) * 6rem)) + ((10) * 6rem )); }
  .row .col-12-of-1 {
    width: calc( 12/1 * (100% - ((1 - 1) * 6rem)) + ((11) * 6rem )); }
  .row .col-12-of-2 {
    width: calc( 12/2 * (100% - ((2 - 1) * 6rem)) + ((11) * 6rem )); }
  .row .col-12-of-3 {
    width: calc( 12/3 * (100% - ((3 - 1) * 6rem)) + ((11) * 6rem )); }
  .row .col-12-of-4 {
    width: calc( 12/4 * (100% - ((4 - 1) * 6rem)) + ((11) * 6rem )); }
  .row .col-12-of-5 {
    width: calc( 12/5 * (100% - ((5 - 1) * 6rem)) + ((11) * 6rem )); }
  .row .col-12-of-6 {
    width: calc( 12/6 * (100% - ((6 - 1) * 6rem)) + ((11) * 6rem )); }
  .row .col-12-of-7 {
    width: calc( 12/7 * (100% - ((7 - 1) * 6rem)) + ((11) * 6rem )); }
  .row .col-12-of-8 {
    width: calc( 12/8 * (100% - ((8 - 1) * 6rem)) + ((11) * 6rem )); }
  .row .col-12-of-9 {
    width: calc( 12/9 * (100% - ((9 - 1) * 6rem)) + ((11) * 6rem )); }
  .row .col-12-of-10 {
    width: calc( 12/10 * (100% - ((10 - 1) * 6rem)) + ((11) * 6rem )); }
  .row .col-12-of-11 {
    width: calc( 12/11 * (100% - ((11 - 1) * 6rem)) + ((11) * 6rem )); }
  .row .col-12-of-12 {
    width: calc( 12/12 * (100% - ((12 - 1) * 6rem)) + ((11) * 6rem )); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(98, 223, 138, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  /* Need this to tell the children object where the absolute positioning should be based from (top/left/bottom, etc.) */
  position: relative;
  /* always tries to set the viewport. */
  background-size: cover;
  background-position: top;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%); }
  .header__logo-box {
    /* absolute from the relative parent, 'header' */
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* Transforms the element,  */
    transform: translate(-50%, -50%);
    text-align: center; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(98, 223, 138, 0.8), rgba(40, 180, 133, 0.8)), url("../img/nat-4.jpg");
  background-size: cover;
  margin-top: -10.5rem;
  transform: skewY(-6.5deg); }
  .section-features > * {
    transform: skewY(6.5deg); }

.section-tours {
  background-color: #f7f7f7;
  padding: 10rem 0 15rem 0;
  transform: skewY(-6.5deg); }
  .section-tours > * {
    transform: skewY(6.5deg); }

.section-stories {
  position: relative;
  padding: 15rem 0; }

.section-booking {
  transform: skewY(-6.5deg);
  padding: 15rem 0;
  background-image: linear-gradient(to right bottom, #62df8a, #28b485); }
  .section-booking > * {
    transform: skewY(6.5deg); }

.booking {
  background-image: linear-gradient(100deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 53%, transparent 53%), url("../img/nat-10.jpg");
  background-size: cover;
  border-radius: 1rem;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.2);
  height: 55rem;
  min-height: 55rem;
  width: 100%; }
  .booking__form {
    width: 50%;
    padding: 6rem; }

/* 
 SASS Pens:
 https://codepen.io/anon/pen/qVrpyv?editors=1100
*/
